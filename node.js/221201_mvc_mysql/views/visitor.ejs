<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://code.jquery.com/jquery-3.6.1.min.js"
    integrity="sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ="
    crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <title>Document</title>
    <style>
        .d-none {
            display: none;
        }
    </style>
</head>
<body>
    <form id="form_register">
        <fieldset style="display: inline-block;">
            <legend>방명록 등록</legend>
            <input type="hidden" name="id"/>
            이름 : <input type="text" name="name" placeholder="사용자 이름"><br>
            방명록 : <input type="text" name="comment" placeholder="방명록"><br>
            <div class="update-btn d-none">
                <button type="button" onclick="update_visitor();">수정</button>
                <button type="button" onclick="back_visitor()">취소</button>
            </div>
            <div class="register-btn">
                <button type="button" onclick="register();">등록</button>
            </div>
        </fieldset>
	</form>

    <table border="1" cellspacing="0" cellpadding="10" style="margin-top: 30px;">
        <tr>
            <th>ID</th>
            <th>작성자</th>
            <th>방명록</th>
            <th>수정</th>
            <th>삭제</th>
        </tr>
        <% for(let i=0; i<data.length; i++) { %>
            <tr>
                <td><%=data[i].id%></td>
                <td><%=data[i].name%></td>
                <td><%=data[i].comment%></td>
                <td><button type="button" onclick="update_load('<%=data[i].id%>', this);">수정</button></td>
                <td><button type="button" onclick="delete_visitor('<%=data[i].id%>', this);">삭제</button></td>
            </tr> <!-- 위 this에는 버튼 태그가 담김. -->
            <!-- 함수에 this를 넘겨준다면 현재 함수가 걸려있는 태그가 담긴다. -->
        <% } %>
    </table>

    <!-- axios method
    get: 데이트를 조회할 때 - query로 받는다.
    *** get 외에는 다 body로 받는다고 생각하면 됨. ***
    post: 데이터 생성, 삽입, insert - body로 받는다.
    delete: 데이터 삭제 - body로 받는다.
    patch: 데이터 하나만 수정할 때 
    put: 데이터 전체 수정
     -->

    <script>
        let update_tr; //전역 변수
        function update_visitor(){
            var form = document.getElementById("form_register");
            axios({
                method: 'patch', //수정하는 method 중 하나.
                url: '/visitor/update', 
                data: {
                    id: form.id.value,
                    name: form.name.value,
                    comment: form.comment.value
                } /* 딕셔너리 형태로 */
            })
            .then((response)=>{
                update_tr.children[1].innerText = form.name.value;
                update_tr.children[2].innerText = form.comment.value;

                form.id.value = "";
                form.name.value = "";
                form.comment.value = ""
                $(".update-btn").addClass("d-none");
                $(".register-btn").removeClass("d-none");
            })
        }

        /* var response.data는 전역 변수로 해도 된다. */
        function update_load(id, element){
            axios({
                method: 'get',
                url: '/visitor/get_visitor',
                params: { id: id }
            })
            .then((response) => {
                var form = document.getElementById("form_register");

                form.id.value = response.data.id;
                form.name.value = response.data.name;
                form.comment.value = response.data.comment;

                /* $(".update-btn").removeClass("d-none");
                $(".register-btn").addClass("d-none"); */
                document.getElementsByClassName("update-btn")[0].classList.remove("d-none");
                document.getElementsByClassName("register-btn")[0].classList.add("d-none");

                update_tr = element.parentElement.parentElement;
            })
        }

        function delete_visitor(delete_id, element){
            axios({
                method: 'delete',
                url: '/visitor/delete',
                data: {id: delete_id}
            })
            .then((response) => {
                if(response.data) element.parentElement.parentElement.remove();
                else alert("알 수 없는 오류 발생");
            })
        }

        function register(){
            let form = document.getElementById("form_register");
            let data = {
                name: form.name.value,
                comment: form.comment.value
            }
            axios({
                method: 'post',
                url: '/visitor/register', //미들웨어가 visitor이므로
                data: data
            })
            .then((response)=>{
                //response에 응답이 올 예정이다.
                $("table").append(`
                    <tr>
                        <td>${response.data}</td>
                        <td>${data.name}</td> /* form.name.value */
                        <td>${data.comment}</td> /* form.comment.value */
                        <td><button type="button" onclick="update_load('${response.data}', this);">수정</button></td>
                        <td><button type="button" onclick = "delete_visitor('${response.data}', this);">삭제</button></td>
                    </tr>
                `)
            })
        }
    </script>
</body>
</html>